
# Установка webpack:
# https://webpack.js.org/guides/getting-started/
// npm install webpack webpack-cli --save-dev
    -// create: webpack.config.js // https://webpack.js.org/guides/getting-started/#using-a-configuration

// ГИД к строкам конфигурации: https://webpack.js.org/configuration/output/#template-strings 

# Переменные окружения:
# https://webpack.js.org/guides/environment-variables/#root
    -// package.json -> "build:dev": "webpack --env mode=development"
    -// обернуть файл конфигурации в функцию

# TypeScript # TypeScript loader for webpack
# https://webpack.js.org/guides/typescript/#basic-setup # https://www.npmjs.com/package/ts-loader#typescript-loader-for-webpack
    -// npm install --save-dev typescript ts-loader
    -// create: tsconfig.json && add: ts-loader

# TypeScript-checkerWebpack (ПЛАГИН)
# https://github.com/TypeStrong/fork-ts-checker-webpack-plugin?tab=readme-ov-file
    -// npm install --save-dev fork-ts-checker-webpack-plugin // вынесение проверки типов отдельным процессом

# Типизация Webpack(TS)
# https://webpack.js.org/configuration/configuration-languages/#typescript
    -// npm install --save-dev typescript ts-node @types/node @types/webpack

# Webpack dev-server
# https://webpack.js.org/guides/development/#using-webpack-dev-server
    -// npm install --save-dev webpack-dev-server
    -// npm install --save-dev @types/webpack-dev-server // Типы dev-server
    -// package.json -> "start": "webpack serve -- --env port=3001" (-- необходимы)

# Установка React
    -// npm i react@latest react-dom@latest
    -// npm i @types/react @types/react-dom --save-dev // Типы react
    (вставка для tsconfig: "jsx": "react-jsx", // избавляет от необходимости явно импортировать react в компонентах (18))

# Установка React Routing
# https://reactrouter.com/en/main/start/tutorial
    -// npm i react-router-dom

# CSS-modules // style.module.css (является частью css-loader-а)
# https://webpack.js.org/loaders/css-loader/#modules
# https://webpack.js.org/loaders/css-loader/#object-2
    -// see 'src/global.d.ts' 
    -// edit css-loader (add new options)

# Плагины:
    # https://webpack.js.org/concepts/#plugins
        - // npm install html-webpack-plugin --save-dev // Плагин шаблона index.html (содержимое файла за основу)
    # https://webpack.js.org/loaders/css-loader/ || https://webpack.js.org/loaders/style-loader/
        -// npm install --save-dev css-loader style-loader // Плагин css лоадера (import "file.css")
    # https://webpack.js.org/loaders/sass-loader/
        -// npm install sass-loader sass webpack --save-dev // sass препроцессор
    # https://webpack.js.org/plugins/mini-css-extract-plugin/
        -// npm install --save-dev mini-css-extract-plugin // отделение CSS от инъекции в JS-стринг.
    # https://react-svgr.com/docs/webpack/
        -// npm install --save-dev @svgr/webpack // плагин компонентной поддержки SVG
    # https://webpack.js.org/plugins/define-plugin/
        -// стандартный плагин вэбпака (подменяет глобальные переменные взятые из окружения)
    # https://webpack.js.org/plugins/copy-webpack-plugin/
        -// npm install copy-webpack-plugin --save-dev // плагин копирования статик-файлов

    # Webpack Bundle Analyzer
    # https://www.npmjs.com/package/webpack-bundle-analyzer
        -// npm install --save-dev webpack-bundle-analyzer // инструмент анализа бандла
        -// npm install --save-dev @types/webpack-bundle-analyzer

    # HOT MODULE REFRESH (REACT) (не установлено. не поддерживается дэв-сервер 5+ - глянуть позже)
    # https://github.com/pmmmwh/react-refresh-webpack-plugin
        -// npm install --save-dev @pmmmwh/react-refresh-webpack-plugin@0.5.11
        -// npm install --save-dev react-refresh-typescript // Using ts-loader // add loader && plugin
